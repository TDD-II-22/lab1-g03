$date
   Sat Aug  6 13:15:41 2022
$end
$version
  2019.1
$end
$timescale
  1ps
$end
$scope module tb_module_mux4a1 $end
$var reg 8 ! dato0_i [7:0] $end
$var reg 8 " dato1_i [7:0] $end
$var reg 8 # dato2_i [7:0] $end
$var reg 8 $ dato3_i [7:0] $end
$var reg 2 % selec_i [1:0] $end
$var reg 8 & salida_o [7:0] $end
$var parameter 32 ' BITS [31:0] $end
$scope module module_mux4a1_1 $end
$var wire 8 ( dato0_i [7:0] $end
$var wire 8 ) dato1_i [7:0] $end
$var wire 8 * dato2_i [7:0] $end
$var wire 8 + dato3_i [7:0] $end
$var wire 2 , selec_i [1:0] $end
$var reg 8 & salida_o [7:0] $end
$var parameter 0 - BITS $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 !
b1010 "
b10100 #
b11110 $
b0 %
b10 &
b1000 '
b10 (
b1010 )
b10100 *
b11110 +
b0 ,
b1000 -
$end
#10000
b1 %
b1010 &
b1 ,
#30000
b10 %
b10100 &
b10 ,
